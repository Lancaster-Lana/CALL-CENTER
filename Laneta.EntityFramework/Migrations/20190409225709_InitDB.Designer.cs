// <auto-generated />
using System;
using Laneta.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Laneta.EntityFramework.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20190409225709_InitDB")]
    partial class InitDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Laneta.Entities.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("State");

                    b.Property<string>("Street");

                    b.Property<string>("Zip");

                    b.HasKey("ID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Laneta.Entities.Alert", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.HasKey("ID");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("Laneta.Entities.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressID");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Laneta.Entities.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressID");

                    b.Property<string>("FirstName");

                    b.Property<string>("Identity");

                    b.Property<string>("LastName");

                    b.Property<string>("ServiceAreas");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Laneta.Entities.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("Sent");

                    b.HasKey("ID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Laneta.Entities.Phone", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID");

                    b.Property<int?>("EmployeeID");

                    b.Property<string>("Label");

                    b.Property<string>("Number");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Phone");
                });

            modelBuilder.Entity("Laneta.Entities.ScheduleItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AssignedOn");

                    b.Property<int>("EmployeeID");

                    b.Property<int>("ServiceTicketID");

                    b.Property<DateTime>("Start");

                    b.Property<int>("WorkHours");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ServiceTicketID");

                    b.ToTable("ScheduleItems");
                });

            modelBuilder.Entity("Laneta.Entities.ServiceLogEntry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int?>("CreatedByID");

                    b.Property<string>("Description");

                    b.Property<int>("ServiceTicketID");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByID");

                    b.HasIndex("ServiceTicketID");

                    b.ToTable("ServiceLogEntries");
                });

            modelBuilder.Entity("Laneta.Entities.ServiceTicket", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssignedToID");

                    b.Property<DateTime?>("Closed");

                    b.Property<int?>("CreatedByID");

                    b.Property<int?>("CustomerID");

                    b.Property<string>("Description");

                    b.Property<int>("EscalationLevel");

                    b.Property<DateTime?>("Opened");

                    b.Property<int>("Status");

                    b.Property<int>("StatusValue");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("AssignedToID");

                    b.HasIndex("CreatedByID");

                    b.HasIndex("CustomerID");

                    b.ToTable("ServiceTickets");
                });

            modelBuilder.Entity("Laneta.Entities.Customer", b =>
                {
                    b.HasOne("Laneta.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");
                });

            modelBuilder.Entity("Laneta.Entities.Employee", b =>
                {
                    b.HasOne("Laneta.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");
                });

            modelBuilder.Entity("Laneta.Entities.Phone", b =>
                {
                    b.HasOne("Laneta.Entities.Customer")
                        .WithMany("Phone")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Laneta.Entities.Employee")
                        .WithMany("Phone")
                        .HasForeignKey("EmployeeID");
                });

            modelBuilder.Entity("Laneta.Entities.ScheduleItem", b =>
                {
                    b.HasOne("Laneta.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Laneta.Entities.ServiceTicket", "ServiceTicket")
                        .WithMany()
                        .HasForeignKey("ServiceTicketID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Laneta.Entities.ServiceLogEntry", b =>
                {
                    b.HasOne("Laneta.Entities.Employee", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByID");

                    b.HasOne("Laneta.Entities.ServiceTicket", "ServiceTicket")
                        .WithMany("Log")
                        .HasForeignKey("ServiceTicketID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Laneta.Entities.ServiceTicket", b =>
                {
                    b.HasOne("Laneta.Entities.Employee", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToID");

                    b.HasOne("Laneta.Entities.Employee", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByID");

                    b.HasOne("Laneta.Entities.Customer", "Customer")
                        .WithMany("RequestedTickets")
                        .HasForeignKey("CustomerID");
                });
#pragma warning restore 612, 618
        }
    }
}
