@model Laneta.Web.ViewModels.AssignViewModel

<h2> Assign ticket <b> @Model.ServiceTicket.Title</b> to </h2>
<h3> available employees: </h3>

<div class="loading" style="">
    <div>
        <h4>Please wait while we look for the closest technicians</h4>
        <img src="@Url.Content("~/Content/Images/ajax-loader.gif")" alt="loading" />
    </div>
</div>

<div class="time-table">
    <table>
        <thead>
            <tr>
                <th class="employee">Employee</th>
                <!-- TODO: date of week (7 days): each day has a list of events for employee -->
                <!-- TODO: arrows <left-right> to move between weeks -->
                <th colspan="2">8:00am</th>
                <th colspan="2">9:00am</th>
                <th colspan="2">10:00am</th>
                <th colspan="2">11:00am</th>
                <th colspan="2">12:00pm</th>
                <th colspan="2">1:00pm</th>
                <th colspan="2">2:00pm</th>
                <th colspan="2">3:00pm</th>
                <th colspan="2">4:00pm</th>
                <th colspan="2">5:00pm</th>
                <th colspan="2">6:00pm</th>
                <th colspan="2">7:00pm</th>
                <th colspan="2">8:00pm</th>
            </tr>
        </thead>
        @foreach (var employee in Model.AvailableEmployees)
        {
            //TODO: default start - now and duration - 2 hours
            var startTime = DateTime.Now;
            var endTime = startTime.AddHours(2);
                //DateTime.ParseExact("Thu 16 May 5:00 PM 2019", "ddd dd MMM h:mm tt yyyy", System.Globalization.CultureInfo.InvariantCulture);

            var scheduledItems = this.Model.ScheduleItems.Where(i => i.EmployeeID == employee.ID).OrderBy(i => i.Start);

            <tr>
                <td class="employee" >
                    <a href="@Url.Action("Schedule", new { ServiceTicketID = Model.ServiceTicket.ID, EmployeeID = employee.ID, StartTime = startTime })">assign to </a> @employee.FullName 
                </td>
                @foreach (var scheduleItem in scheduledItems)
                {
                    TimeSpan diff = (scheduleItem.Start - startTime);

                    for (var current = 0.0; current < (diff.Hours + diff.Minutes / 60.0); current += 0.5)
                    {
                        <td class="free" rel="@((double)startTime.Hour + (double)current)">&nbsp;</td>
                    }

                    <td class="busy" colspan="@(scheduleItem.WorkHours * 2)">
                        <div>
                            <h2>@string.Format("A0141{0:d2}", scheduleItem.ServiceTicket.ID)</h2>
                            <p>@scheduleItem.ServiceTicket.Title</p>
                        </div>
                    </td>

                    startTime = scheduleItem.Start.AddHours(scheduleItem.WorkHours);
                }

                @{
                    TimeSpan complement = endTime - startTime;

                    for (var current = 0.0; current < (complement.Hours + complement.Minutes / 60.0); current += 0.5)
                    {
                        <td class="free" rel="@((double)startTime.Hour + (double)current)">&nbsp;</td>
                    }
                }
            </tr>
        }
    </table>
</div>
 
<script type="text/javascript">
    $(function () {
        $("div.time-table table td.free").click(function () {
            var location = $(this).parent().attr('rel')
                + "&startTime="
                + $(this).attr('rel');
            window.location.href = location;
        });

        window.setTimeout(function () {
            $("div.loading").hide();
        }, 2900);

        window.setTimeout(function () {
            $("div.time-table").show('scale');
        }, 3000);
    });
</script>